{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Minecraft-mod-updater","body":"## The motivation\r\nIf you run a mod server, chances are your players have trouble keeping their mods and/or configs in-sync with your's.  It is for this very reason that I created the Minecraft Mod Updater(MCModUpdater for short), also, because some users just flat out refuse to listen to instruction and hate adding new mods even to just the mods folder.\r\n\r\nIf you have ever played an only game(e.g. World of Warcraft or something of the like) you will be famillier with the game's updater(even Minecraft itself has this) whitch removes any pain installing updates to the game.  So with a goal for an end-product, and a motivation, I spent the time from late December to late January working on the basic design of the program.  In early Febuary, it reached a closed beta 1.0 then in late febuary, 1.1.  That was when this project reached the point where I wanted to go public with it.  So, I posted the project to Github and began working on 1.2.  1.2 was to be the point where I would post it to the Minecraftforum for a true test of its power.\r\n\r\n## The features\r\nFor the client:\r\n\r\n* Auto Update Mode - when this mode is enabled, the client will bypass the update overview and automatically request all of the changed files.\r\n* Account status checking - to avoid this program being used for piracy, before connecting to an update server, the client must login with a valid Minecraft account that has purchased the game.\r\n* Server sent background image - while the client is connecting to the server, the server will send a background image that will be shown during the download process.\r\n* Mod images - The server can send images to the client that will be shown during the download process of the mods.\r\n* Custom Minecraft installation - to avoid corruption of the user's current Minecraft installation, MCModUpdater will use a custom path for Minecraft located in the installation folder of the updater itself.  \r\nFor the server:\r\n\r\n* An easy to use file structure - the server uses a file structure that for the most part, mirrors that of Minecraft.\r\n* Mod white/blacklisting - if you don't want someone to have some mod that should only be used by OP's, you can whitelist that mod so that only people who you want will be sent it.  Or if you don't want somebody getting a recipe viewer, you can blacklist them. \r\nAnd many more.","tagline":"A tool for mod servers and for the connivance of players.","google":""}